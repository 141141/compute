<?xml version="1.0" encoding="utf-8"?>
<header name="boost/compute/algorithm/equal_range.hpp">
  <namespace name="boost">
    <namespace name="compute">

      <!-- boost::compute::equal_range(first, last, value, queue) -->
      <function name="equal_range">
        <template>
          <template-type-parameter name="InputIterator"/>
          <template-type-parameter name="T"/>
        </template>

        <type>std::pair&lt;InputIterator, InputIterator&gt;</type>

        <parameter name="first">
          <paramtype>InputIterator</paramtype>
        </parameter>
        <parameter name="last">
          <paramtype>InputIterator</paramtype>
        </parameter>
        <parameter name="value">
          <paramtype>const T&amp;</paramtype>
        </parameter>
        <parameter name="queue">
          <paramtype>command_queue &amp;</paramtype>
        </parameter>

        <returns>
          A pair of iterators pointing bounds of the range.
        </returns>

        <description>
          <para>
            Returns a pair of iterators containing the range of values equal
            to <code>value</code> in the sorted range [<code>first</code>,
            <code>last</code>).
          </para>
          <para>
            See also: <functionname>lower_bound()</functionname>,
                      <functionname>upper_bound()</functionname>
          </para>
        </description>
      </function>
    </namespace>
  </namespace>
</header>
