<?xml version="1.0" encoding="utf-8"?>
<header name="boost/compute/algorithm/replace_copy.hpp">
  <namespace name="boost">
    <namespace name="compute">

      <!-- boost::compute::replace_copy(first, last, result, old_value, new_value, queue) -->
      <function name="replace_copy">
        <template>
          <template-type-parameter name="InputIterator"/>
          <template-type-parameter name="OutputIterator"/>
          <template-type-parameter name="T"/>
        </template>

        <type>void</type>

        <parameter name="first">
          <paramtype>InputIterator</paramtype>
        </parameter>
        <parameter name="last">
          <paramtype>InputIterator</paramtype>
        </parameter>
        <parameter name="result">
          <paramtype>OutputIterator</paramtype>
        </parameter>
        <parameter name="old_value">
          <paramtype>const T&amp;</paramtype>
        </parameter>
        <parameter name="new_value">
          <paramtype>const T&amp;</paramtype>
        </parameter>
        <parameter name="queue">
          <paramtype>command_queue &amp;</paramtype>
        </parameter>

        <description>
          <para>
            Copies the values in the range [<code>first</code>,
            <code>last</code>) to the range beginning at <code>result</code>
            while replacing each instance of <code>old_value</code> with
            <code>new_value</code>.
          </para>
          <para>
            See also: <functionname>replace()</functionname>
          </para>
        </description>
      </function>
    </namespace>
  </namespace>
</header>
